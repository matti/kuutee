# ARG IMAGE_ARCH=linux/arm
# For arm64v8 use:
ARG IMAGE_ARCH=linux/arm64
# ARG BASE_NAME=wayland-base
# For arm64v8 with Vivante use:
ARG BASE_NAME=wayland-base-vivante
ARG IMAGE_TAG=3
ARG DOCKER_REGISTRY=torizon
FROM --platform=$IMAGE_ARCH $DOCKER_REGISTRY/$BASE_NAME:$IMAGE_TAG AS base

COPY kms-setup.sh /usr/bin/kms-setup.sh

RUN apt-get -y update && apt-get install -y --no-install-recommends \
    apt-utils \
    && apt-get -y upgrade \
    && apt-get clean && apt-get autoremove && rm -rf /var/lib/apt/lists/*

# KUUTEE: skip these
# # Install remaining dependencies required to run qtbase
# RUN apt-get -y update && apt-get install -y --no-install-recommends \
#     libqt6gui6 \
#     libfontconfig1-dev \
#     libqt6concurrent6 \
#     libqt6dbus6 \
#     libqt6network6 \
#     libqt6printsupport6 \
#     libqt6sql6 \
#     libqt6test6 \
#     libqt6widgets6 \
#     libqt6xml6 \
#     libqt6qml6 \
#     libqt6opengl6 \
#     libqt6quicktest6 \
#     libqt6quickwidgets6 \
#     qt6-wayland \
#     && apt-get clean && apt-get autoremove && rm -rf /var/lib/apt/lists/*

# KUUTEE: start own build tools and build
# KUUTEE: libfontconfig1-dev libwayland-dev are guesses
RUN set -eux ; \
    apt-get update ; apt-get install -y --no-install-recommends \
    wget curl git ca-certificates xz-utils \
    libfontconfig1-dev libwayland-dev \
    build-essential cmake python3

# -opengl Allowed values: no yes desktop es2 dynamic
RUN set -eux ; \
    mkdir /ghjk ; cd /ghjk ; \
    wget https://download.qt.io/official_releases/qt/6.6/6.6.2/single/qt-everywhere-src-6.6.2.tar.xz ; \
    tar -xvof qt-everywhere-src-6.6.2.tar.xz ; \
    mkdir build ; cd build ; \
    ../qt-everywhere-src-6.6.2/configure -static -opengl desktop ; \
    cmake --build . --parallel ; \
    cmake --install . ; \
    rm -rf /ghjk

# KUUTEE: end own build tools and build

ENV QT_QPA_PLATFORM="wayland"

# EGLFS configuration
ENV QT_QPA_EGLFS_INTEGRATION="eglfs_kms"
ENV QT_QPA_EGLFS_KMS_ATOMIC="1"
ENV QT_QPA_EGLFS_KMS_CONFIG="/etc/kms.conf"
